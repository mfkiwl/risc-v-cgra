$date
	Mon Sep 30 17:31:04 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_alu $end
$var wire 1 ! Zero $end
$var wire 1 " CarryOut $end
$var wire 32 # ALU_Out [31:0] $end
$var reg 32 $ A [31:0] $end
$var reg 4 % ALU_Sel [3:0] $end
$var reg 32 & B [31:0] $end
$scope module uut $end
$var wire 32 ' A [31:0] $end
$var wire 32 ( ALU_Out [31:0] $end
$var wire 4 ) ALU_Sel [3:0] $end
$var wire 32 * B [31:0] $end
$var wire 1 ! Zero $end
$var wire 33 + tmp [32:0] $end
$var wire 1 " CarryOut $end
$var reg 32 , ALU_Result [31:0] $end
$var reg 32 - y [31:0] $end
$var reg 1 . zeroOut $end
$var integer 32 / i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx /
0.
bx -
b1000 ,
b1000 +
b11 *
b0 )
b1000 (
b101 '
b11 &
b0 %
b101 $
b1000 #
0"
0!
$end
#10000
b10 #
b10 (
b10 ,
b1 %
b1 )
#20000
b110 #
b110 (
b110 ,
b10 %
b10 )
b101 +
b10 $
b10 '
#30000
b11 #
b11 (
b11 ,
b11 %
b11 )
b10 &
b10 *
b1000 +
b110 $
b110 '
#40000
b10 #
b10 (
b10 ,
b100 %
b100 )
b0 &
b0 *
b1 +
b1 $
b1 '
#50000
b1 #
b1 (
b1 ,
b101 %
b101 )
b10 +
b10 $
b10 '
#60000
b110 %
b110 )
b10000000000000000000000000000000 +
b10000000000000000000000000000000 $
b10000000000000000000000000000000 '
#70000
b1000000000000000000000000000000 #
b1000000000000000000000000000000 (
b1000000000000000000000000000000 ,
b111 %
b111 )
#80000
1!
1.
b0 #
b0 (
b0 ,
b1000 %
b1000 )
b1111000011110000111100001111 &
b1111000011110000111100001111 *
b11111111111111111111111111111111 +
b11110000111100001111000011110000 $
b11110000111100001111000011110000 '
#90000
0!
0.
b11111111111111111111111111111111 #
b11111111111111111111111111111111 (
b11111111111111111111111111111111 ,
b1001 %
b1001 )
#100000
b1010 %
b1010 )
#110000
1!
1.
b0 #
b0 (
b0 ,
b1011 %
b1011 )
#120000
0!
0.
b11111111111111111111111111111111 #
b11111111111111111111111111111111 (
b11111111111111111111111111111111 ,
b1100 %
b1100 )
#130000
b1 #
b1 (
b1 ,
b1101 %
b1101 )
b1010 &
b1010 *
b1111 +
b101 $
b101 '
#140000
1!
1.
b0 #
b0 (
b0 ,
1"
b1110 %
b1110 )
b11111111111111111111111111110110 &
b11111111111111111111111111110110 *
b111111111111111111111111111110001 +
b11111111111111111111111111111011 $
b11111111111111111111111111111011 '
#150000
0!
0.
0"
b11111111111111111111111111111110 #
b11111111111111111111111111111110 (
b11111111111111111111111111111110 ,
b0 /
b11111111111111111111111111111110 -
b1111 %
b1111 )
b10 &
b10 *
b11111111111111111111111111111010 +
b11111111111111111111111111111000 $
b11111111111111111111111111111000 '
#160000
